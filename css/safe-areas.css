/* Safe Areas CSS - Solução para inset areas em dispositivos móveis */

/* Variáveis CSS dinâmicas - uso direto do env() */
:root {
    --safe-area-inset-top: env(safe-area-inset-top, 0px);
    --safe-area-inset-right: env(safe-area-inset-right, 0px);
    --safe-area-inset-bottom: env(safe-area-inset-bottom, 0px);
    --safe-area-inset-left: env(safe-area-inset-left, 0px);
}

/* Aplicação global das safe areas */
/* Aplica padding do notch nas páginas que NÃO são a tela de pontuação */
body:not(.scoring-page-active) {
    padding-top: env(safe-area-inset-top, 0px);
    padding-right: env(safe-area-inset-right, 0px);
    padding-bottom: env(safe-area-inset-bottom, 0px);
    padding-left: env(safe-area-inset-left, 0px);
}

.safe-area-container {
    padding-top: var(--safe-area-inset-top);
    padding-right: var(--safe-area-inset-right);
    padding-bottom: var(--safe-area-inset-bottom);
    padding-left: var(--safe-area-inset-left);
}

/* Classes utilitárias para safe areas */
.safe-top {
    padding-top: var(--safe-area-inset-top);
}

.safe-right {
    padding-right: var(--safe-area-inset-right);
}

.safe-bottom {
    padding-bottom: var(--safe-area-inset-bottom);
}

.safe-left {
    padding-left: var(--safe-area-inset-left);
}

/* Posicionamento com safe areas */
.fixed-top-safe {
    position: fixed;
    top: var(--safe-area-inset-top);
}

.fixed-bottom-safe {
    position: fixed;
    bottom: var(--safe-area-inset-bottom);
}

.fixed-left-safe {
    position: fixed;
    left: var(--safe-area-inset-left);
}

.fixed-right-safe {
    position: fixed;
    right: var(--safe-area-inset-right);
}





/* Removidos fallbacks legacy (constant/old iOS). Usamos env() com fallback 0px no :root. */

/* Removido ajuste especial para landscape com padding extra: manter apenas os insets reais */

/* Ajustes específicos para PWA */
/* Mantemos somente o respeito aos insets, sem forçar extras globais */
@media (display-mode: standalone), (display-mode: fullscreen) {
    body:not(.scoring-page-active) {
        /* Já aplicamos env() globalmente; não adicionar extras aqui */
    }
    .fixed-top-safe {
        top: var(--safe-area-inset-top);
    }
    .app-main-content {
        /* Evita reduzir a altura globalmente; cada tela ajusta seu próprio layout */
        height: auto !important;
        min-height: 100vh;
    }
}

/* Removidos ajustes específicos forçando 44px em landscape; usar apenas os insets reais */

/* Debug para visualizar safe areas (remover em produção) */
.debug-safe-areas {
    position: relative;
}

.debug-safe-areas::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: var(--safe-area-inset-top);
    background: rgba(255, 0, 0, 0.3);
    pointer-events: none;
    z-index: 9999;
    border-bottom: 2px solid red;
}

.debug-safe-areas::after {
    content: '';
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: var(--safe-area-inset-bottom);
    background: rgba(0, 255, 0, 0.3);
    pointer-events: none;
    z-index: 9999;
    border-top: 2px solid green;
}

/* Debug lateral para landscape */
body.debug-safe-areas {
    position: relative;
}

body.debug-safe-areas::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    width: var(--safe-area-inset-left);
    background: rgba(0, 0, 255, 0.3);
    pointer-events: none;
    z-index: 9999;
    border-right: 2px solid blue;
}

body.debug-safe-areas::after {
    content: '';
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    width: var(--safe-area-inset-right);
    background: rgba(255, 255, 0, 0.3);
    pointer-events: none;
    z-index: 9999;
    border-left: 2px solid yellow;
}

/* Transparência das safe areas: pinta o fundo apenas na área de conteúdo
   para que o padding (onde aplicamos os insets) fique transparente. */
body {
  background-clip: content-box !important;
}

/* Fallback: preto atrás das áreas transparentes quando a transparência não for possível */
html {
  background-color: #000 !important;
}